(spec 6 32 base index scale disp mem bit (ite (eq (and bit 0x0000001f:32) 0x00000000:32) (and 0b11111111111111111111111111111110:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000001:32) (and 0b11111111111111111111111111111101:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000002:32) (and 0b11111111111111111111111111111011:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000003:32) (and 0b11111111111111111111111111110111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000004:32) (and 0b11111111111111111111111111101111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000005:32) (and 0b11111111111111111111111111011111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000006:32) (and 0b11111111111111111111111110111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000007:32) (and 0b11111111111111111111111101111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000008:32) (and 0b11111111111111111111111011111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000009:32) (and 0b11111111111111111111110111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x0000000a:32) (and 0b11111111111111111111101111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x0000000b:32) (and 0b11111111111111111111011111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x0000000c:32) (and 0b11111111111111111110111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x0000000d:32) (and 0b11111111111111111101111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x0000000e:32) (and 0b11111111111111111011111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x0000000f:32) (and 0b11111111111111110111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000010:32) (and 0b11111111111111101111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000011:32) (and 0b11111111111111011111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000012:32) (and 0b11111111111110111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000013:32) (and 0b11111111111101111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000014:32) (and 0b11111111111011111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000015:32) (and 0b11111111110111111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000016:32) (and 0b11111111101111111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000017:32) (and 0b11111111011111111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000018:32) (and 0b11111110111111111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x00000019:32) (and 0b11111101111111111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x0000001a:32) (and 0b11111011111111111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x0000001b:32) (and 0b11110111111111111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x0000001c:32) (and 0b11101111111111111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x0000001d:32) (and 0b11011111111111111111111111111111:32 mem) (ite (eq (and bit 0x0000001f:32) 0x0000001e:32) (and 0b10111111111111111111111111111111:32 mem) (and 0b01111111111111111111111111111111:32 mem)))))))))))))))))))))))))))))))))

(lib not and and shl (const 32 1) (const 32 31))
